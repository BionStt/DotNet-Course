// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Rmdb.Infrastructure;

namespace Rmdb.Infrastructure.Migrations
{
    [DbContext(typeof(RmdbContext))]
    partial class RmdbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.0.0-preview3.19153.1");

            modelBuilder.Entity("Rmdb.Domain.Model.Movie", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Color");

                    b.Property<string>("Description");

                    b.Property<DateTime>("ReleaseDate");

                    b.Property<TimeSpan>("RunTime");

                    b.Property<double>("Score");

                    b.Property<string>("Title");

                    b.HasKey("Id");

                    b.ToTable("Movies");
                });

            modelBuilder.Entity("Rmdb.Domain.Model.Person", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime?>("BirthDate");

                    b.Property<DateTime?>("Deceased");

                    b.Property<string>("LastName");

                    b.Property<Guid?>("MovieId");

                    b.Property<Guid?>("MovieId1");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.HasIndex("MovieId");

                    b.HasIndex("MovieId1");

                    b.ToTable("Persons");
                });

            modelBuilder.Entity("Rmdb.Domain.Model.Person", b =>
                {
                    b.HasOne("Rmdb.Domain.Model.Movie")
                        .WithMany("Actors")
                        .HasForeignKey("MovieId");

                    b.HasOne("Rmdb.Domain.Model.Movie")
                        .WithMany("Directors")
                        .HasForeignKey("MovieId1");
                });
#pragma warning restore 612, 618
        }
    }
}
